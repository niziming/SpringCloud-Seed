<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zm.web.mapper.RoleAccountResourceMapper">
    <insert id="add"
            useGeneratedKeys="true"
            keyProperty="web_id"
            parameterType="cn.zm.web.entity.RoleAccountResource">
        insert into role_account_resource(
                accountId,
                username,
                password,
                roleId,
                rolename,
                resourceId,
                resourceName,
                apiUrl
        )values(
                #{accountId},
                #{username},
                #{password},
                #{roleId},
                #{rolename},
                #{resourceId},
                #{resourceName},
                #{apiUrl}
        )
    </insert>

    <select id="get"
            parameterType="cn.zm.web.entity.RoleAccountResource"
            resultType="cn.zm.web.entity.RoleAccountResource">
        select
            v.accountId,
            v.username,
            v.password,
            v.roleId,
            v.rolename,
            v.resourceId,
            v.resourceName,
            v.apiUrl
        from
        role_account_resource v
        where
        1 = 1
            <if test="accountId != null and accountId != ''"> and v.accountId
                = #{accountId}</if>
            <if test="username != null and username != ''"> and v.username
                = #{username}</if>
            <if test="password != null and password != ''"> and v.password
                = #{password}</if>
            <if test="roleId != null and roleId != ''"> and v.roleId
                = #{roleId}</if>
            <if test="rolename != null and rolename != ''"> and v.rolename
                = #{rolename}</if>
            <if test="resourceId != null and resourceId != ''"> and v.resourceId
                = #{resourceId}</if>
            <if test="resourceName != null and resourceName != ''"> and v.resourceName
                = #{resourceName}</if>
            <if test="apiUrl != null and apiUrl != ''"> and v.apiUrl
                = #{apiUrl}</if>
    </select>

    <select id="getById"
            parameterType="cn.zm.web.entity.RoleAccountResource"
            resultType="cn.zm.web.entity.RoleAccountResource">
        select
            v.accountId,
            v.username,
            v.password,
            v.roleId,
            v.rolename,
            v.resourceId,
            v.resourceName,
            v.apiUrl
        from
        role_account_resource v
        where
        1 = 1
        and v.web_id = #{web_id}
        limit 1
    </select>

    <update id="update"
            parameterType="cn.zm.web.entity.RoleAccountResource">
        update role_account_resource v
        set v.web_id = #{web_id}
                <if test="accountId != null and accountId != ''"> , v.accountId
                    = #{accountId}</if>
                <if test="username != null and username != ''"> , v.username
                    = #{username}</if>
                <if test="password != null and password != ''"> , v.password
                    = #{password}</if>
                <if test="roleId != null and roleId != ''"> , v.roleId
                    = #{roleId}</if>
                <if test="rolename != null and rolename != ''"> , v.rolename
                    = #{rolename}</if>
                <if test="resourceId != null and resourceId != ''"> , v.resourceId
                    = #{resourceId}</if>
                <if test="resourceName != null and resourceName != ''"> , v.resourceName
                    = #{resourceName}</if>
                <if test="apiUrl != null and apiUrl != ''"> , v.apiUrl
                    = #{apiUrl}</if>
        where v.web_id = #{web_id}
    </update>

    <delete id="del"
            parameterType="java.lang.String">
        delete from role_account_resource
        where web_id = #{web_id}
    </delete>
</mapper>
